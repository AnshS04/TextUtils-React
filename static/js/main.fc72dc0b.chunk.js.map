{"version":3,"sources":["../../../React 2/src/components/Alert.js","../../../React 2/src/components/Navbar.js","../../../React 2/src/components/TextForm.js","../../../React 2/src/App.js","../../../React 2/src/reportWebVitals.js","../../../React 2/src/index.js"],"names":["Alert","props","React","createElement","style","height","alert","className","concat","type","role","msg","Navbar","mode","href","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","aria-checked","htmlFor","TextForm","_useState","useState","_useState2","_slicedToArray","text","setText","Fragment","color","heading","value","backgroundColor","onChange","event","target","rows","newText","toLowerCase","toUpperCase","SpeechSynthesisUtterance","window","speechSynthesis","speak","document","getElementById","select","navigator","clipboard","writeText","getSelection","removeAllRanges","showAlert","split","join","length","filter","element","defaultProps","aboutText","App","setAlert","_useState3","_useState4","setMode","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.fc72dc0b.chunk.js","sourcesContent":["import React from 'react'\n\nfunction Alert(props) {\n  return (\n    <div style={{height:'50px'}}>\n        {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\n        <strong>{props.alert.msg}</strong>\n    </div>}\n\n    </div>\n    \n  )\n}\n\nexport default Alert","import React from 'react'\nimport PropTypes from 'prop-types'\n// import { Link } from 'react-router-dom';\n\n\nexport default function Navbar(props) {\n  return (\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\n        <div className=\"container-fluid\">\n        <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\n          {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n              <li className=\"nav-item\">\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\n                {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\n              </li>\n              <li className=\"nav-item\">\n                {/* <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link> */}\n              </li>\n              \n            </ul>\n            {/* <form className=\"d-flex\" role=\"search\">\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\n              <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button>\n            </form> */}\n\n            <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\n         \n              <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" aria-checked=\"false\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\n            </div>\n\n          </div>\n        </div>\n      </nav>\n  )\n}\n\nNavbar.propTypes = {title: PropTypes.string.isRequired,\n                    aboutText: PropTypes.string.isRequired};\n\nNavbar.defaultProps = {title: 'Set title here',\n                        aboutText: 'About text here'};","import React, {useState} from 'react'\n\nexport default function TextForm(props) {\n\n    const handleUpClick = ()=>{\n\n        //console.log(\"UpperCase was clicked\");\n        let newText = text.toUpperCase();\n        setText(newText);\n\n    }\n\n    const handleLoClick = ()=>{\n\n      //console.log(\"UpperCase was clicked\");\n      let newText = text.toLowerCase();\n      setText(newText);\n\n  }\n\n  const handleClearClick = ()=>{\n\n    //console.log(\"UpperCase was clicked\");\n    let newText = '';\n    setText(newText);\n\n}\n\n  const speak = () => {\n    let msg = new SpeechSynthesisUtterance();\n    msg.text = text;\n    window.speechSynthesis.speak(msg);\n  }\n\n  const handleCopy = ()=>{\n    var text = document.getElementById(\"myBox\");\n    text.select();\n    navigator.clipboard.writeText(text.value);\n    document.getSelection().removeAllRanges();\n    props.showAlert(\"Copied to Clipboard\", \"success\");\n  }\n\n  const handleExtraSpaces = ()=>{\n    let newText = text.split(/[ ]+/);\n    setText(newText.join(\" \"));\n  }\n\n    const handleOnChange = (event)=>{\n\n        //console.log(\"On change\");\n        setText(event.target.value);\n    }\n\n\n    const [text, setText] = useState('');\n\n  return (\n    <>\n\n      <div className='container' style={{color: props.mode==='light'?'black':'white'}}>\n\n      <h1>{props.heading}</h1>\n      <div className=\"mb-3\">\n      {/* <label for=\"myBox\" class=\"form-label\">Example textarea</label> */}\n      <textarea className=\"form-control\" id=\"myBox\" value={text} style={{backgroundColor: props.mode==='light'?'white':'#121212', color: props.mode==='light'?'black':'white'}} onChange={handleOnChange} rows=\"8\"></textarea>\n      </div>\n      <button className=\"btn btn-primary mx-1 my-1\" onClick={handleLoClick}>Convert to LowerCase</button>\n      <button className=\"btn btn-primary mx-1 my-1\" onClick={handleUpClick}>Convert to UpperCase</button>\n      <button className=\"btn btn-primary mx-1 my-1\" onClick={handleClearClick}>Clear text</button>\n      <button className=\"btn btn-primary mx-1 my-1\" onClick={speak}>Speak</button>\n      <button className=\"btn btn-primary mx-1 my-1\" onClick={handleCopy}>Copy text</button>\n      <button className=\"btn btn-primary mx-1 my-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\n      </div>\n\n      <div className=\"container my-3\" style={{color: props.mode==='light'?'black':'white'}}>\n        <h2>Summary</h2>\n        <p>{text.length === 0 ? 0 : text.split(\" \").filter((element)=>{return element.length!==0}).length} words and {text.length} characters</p>\n        <p>{text.length === 0 ? 0 : 0.008*text.split(\" \").filter((element)=>{return element.length!==0}).length} minutes read</p>\n        <h2>Preview</h2>\n        <p>{text.length>0?text:\"Write something in the textbox to preview it here.\"}</p>\n      </div>\n    </>\n\n    \n  )\n}\n","/* eslint-disable jsx-a11y/anchor-is-valid */\n//import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport Alert from './components/Alert';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n// import About from './components/About';\nimport {useState} from 'react';\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [alert, setAlert] = useState(null);\n  const [mode, setMode] = useState('light');\n  // const [switchText, setSwitchText] = useState('light');\n\n  const showAlert = (message, type) => {\n    setAlert(\n      {\n        msg: message,\n        type: type\n      }\n    )\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n  const toggleMode = ()=>{\n    if(mode === 'light')\n    {\n      setMode('dark');\n      document.body.style.backgroundColor = '#121212';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      // setSwitchText('light');\n      //document.title = \"TextUtils - Dark Mode\";\n      // setInterval(() => {\n      //   document.title = \"TextUtils is Amazing\";\n      // }, 1000);\n\n      // setInterval(() => {\n      //   document.title = \"Install TextUtils Now\";\n      // }, 2500);\n    }\n    else\n    {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n      // setSwitchText('dark');\n      //document.title = \"TextUtils - Light Mode\";\n    }\n  } \n\n  return (\n    <>\n    {/* <Router> */}\n      <Navbar title=\"TextUtils\" aboutText=\"About TextUtils\" mode={mode} toggleMode={toggleMode} /*switchText={switchText}*//>\n      \n      <Alert alert = {alert}/>\n\n      <div className=\"container my-3\">\n\n      {/* <Routes>\n            <Route exact path=\"/about\" element={<About mode={mode} />}>\n            </Route>\n             <Route exact path=\"/\" element={<TextForm heading=\"Enter text to analyze\"  mode={mode} showAlert={showAlert} />}> \n            </Route>\n      </Routes> */}\n        <TextForm heading=\"Enter text to analyze\"  mode={mode} showAlert={showAlert}/>\n      </div>\n\n      {/* </Router> */}\n      \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}